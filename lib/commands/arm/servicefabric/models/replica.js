/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the Replica class.
 * @constructor
 * @member {number} [serviceKind]
 * 
 * @member {string} [replicaId]
 * 
 * @member {number} [replicaRole]
 * 
 * @member {number} [replicaStatus]
 * 
 * @member {number} [healthState]
 * 
 * @member {string} [address]
 * 
 * @member {string} [nodeName]
 * 
 * @member {string} [lastInBuildDurationInSeconds]
 * 
 */
function Replica(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.serviceKind !== undefined) {
      this.serviceKind = parameters.serviceKind;
    }
    if (parameters.replicaId !== undefined) {
      this.replicaId = parameters.replicaId;
    }
    if (parameters.replicaRole !== undefined) {
      this.replicaRole = parameters.replicaRole;
    }
    if (parameters.replicaStatus !== undefined) {
      this.replicaStatus = parameters.replicaStatus;
    }
    if (parameters.healthState !== undefined) {
      this.healthState = parameters.healthState;
    }
    if (parameters.address !== undefined) {
      this.address = parameters.address;
    }
    if (parameters.nodeName !== undefined) {
      this.nodeName = parameters.nodeName;
    }
    if (parameters.lastInBuildDurationInSeconds !== undefined) {
      this.lastInBuildDurationInSeconds = parameters.lastInBuildDurationInSeconds;
    }
  }    
}


/**
 * Validate the payload against the Replica schema
 *
 * @param {JSON} payload
 *
 */
Replica.prototype.serialize = function () {
  var payload = {};
  if (this['serviceKind'] !== null && this['serviceKind'] !== undefined) {
    if (typeof this['serviceKind'] !== 'number') {
      throw new Error('this[\'serviceKind\'] must be of type number.');
    }
    payload['ServiceKind'] = this['serviceKind'];
  }

  if (this['replicaId'] !== null && this['replicaId'] !== undefined) {
    if (typeof this['replicaId'].valueOf() !== 'string') {
      throw new Error('this[\'replicaId\'] must be of type string.');
    }
    payload['ReplicaId'] = this['replicaId'];
  }

  if (this['replicaRole'] !== null && this['replicaRole'] !== undefined) {
    if (typeof this['replicaRole'] !== 'number') {
      throw new Error('this[\'replicaRole\'] must be of type number.');
    }
    payload['ReplicaRole'] = this['replicaRole'];
  }

  if (this['replicaStatus'] !== null && this['replicaStatus'] !== undefined) {
    if (typeof this['replicaStatus'] !== 'number') {
      throw new Error('this[\'replicaStatus\'] must be of type number.');
    }
    payload['ReplicaStatus'] = this['replicaStatus'];
  }

  if (this['healthState'] !== null && this['healthState'] !== undefined) {
    if (typeof this['healthState'] !== 'number') {
      throw new Error('this[\'healthState\'] must be of type number.');
    }
    payload['HealthState'] = this['healthState'];
  }

  if (this['address'] !== null && this['address'] !== undefined) {
    if (typeof this['address'].valueOf() !== 'string') {
      throw new Error('this[\'address\'] must be of type string.');
    }
    payload['Address'] = this['address'];
  }

  if (this['nodeName'] !== null && this['nodeName'] !== undefined) {
    if (typeof this['nodeName'].valueOf() !== 'string') {
      throw new Error('this[\'nodeName\'] must be of type string.');
    }
    payload['NodeName'] = this['nodeName'];
  }

  if (this['lastInBuildDurationInSeconds'] !== null && this['lastInBuildDurationInSeconds'] !== undefined) {
    if (typeof this['lastInBuildDurationInSeconds'].valueOf() !== 'string') {
      throw new Error('this[\'lastInBuildDurationInSeconds\'] must be of type string.');
    }
    payload['LastInBuildDurationInSeconds'] = this['lastInBuildDurationInSeconds'];
  }

  return payload;
};

/**
 * Deserialize the instance to Replica schema
 *
 * @param {JSON} instance
 *
 */
Replica.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['ServiceKind'] !== undefined) {
      this['serviceKind'] = instance['ServiceKind'];
    }

    if (instance['ReplicaId'] !== undefined) {
      this['replicaId'] = instance['ReplicaId'];
    }

    if (instance['ReplicaRole'] !== undefined) {
      this['replicaRole'] = instance['ReplicaRole'];
    }

    if (instance['ReplicaStatus'] !== undefined) {
      this['replicaStatus'] = instance['ReplicaStatus'];
    }

    if (instance['HealthState'] !== undefined) {
      this['healthState'] = instance['HealthState'];
    }

    if (instance['Address'] !== undefined) {
      this['address'] = instance['Address'];
    }

    if (instance['NodeName'] !== undefined) {
      this['nodeName'] = instance['NodeName'];
    }

    if (instance['LastInBuildDurationInSeconds'] !== undefined) {
      this['lastInBuildDurationInSeconds'] = instance['LastInBuildDurationInSeconds'];
    }
  }

  return this;
};

module.exports = Replica;
