/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the ApplicationHealthPolicy class.
 * @constructor
 * @member {boolean} [considerWarningAsError]
 * 
 * @member {number} [maxPercentUnhealthyDeployedApplications]
 * 
 * @member {object} [defaultServiceTypeHealthPolicy]
 * 
 * @member {number}
 * [defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices]
 * 
 * @member {number}
 * [defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService]
 * 
 * @member {number}
 * [defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition]
 * 
 */
function ApplicationHealthPolicy(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.considerWarningAsError !== undefined) {
      this.considerWarningAsError = parameters.considerWarningAsError;
    }
    if (parameters.maxPercentUnhealthyDeployedApplications !== undefined) {
      this.maxPercentUnhealthyDeployedApplications = parameters.maxPercentUnhealthyDeployedApplications;
    }
    if (parameters.defaultServiceTypeHealthPolicy) {
      this.defaultServiceTypeHealthPolicy = new models['ApplicationHealthPolicyDefaultServiceTypeHealthPolicy'](parameters.defaultServiceTypeHealthPolicy);
    }
  }    
}


/**
 * Validate the payload against the ApplicationHealthPolicy schema
 *
 * @param {JSON} payload
 *
 */
ApplicationHealthPolicy.prototype.serialize = function () {
  var payload = {};
  if (this['considerWarningAsError'] !== null && this['considerWarningAsError'] !== undefined) {
    if (typeof this['considerWarningAsError'] !== 'boolean') {
      throw new Error('this[\'considerWarningAsError\'] must be of type boolean.');
    }
    payload['ConsiderWarningAsError'] = this['considerWarningAsError'];
  }

  if (this['maxPercentUnhealthyDeployedApplications'] !== null && this['maxPercentUnhealthyDeployedApplications'] !== undefined) {
    if (typeof this['maxPercentUnhealthyDeployedApplications'] !== 'number') {
      throw new Error('this[\'maxPercentUnhealthyDeployedApplications\'] must be of type number.');
    }
    payload['MaxPercentUnhealthyDeployedApplications'] = this['maxPercentUnhealthyDeployedApplications'];
  }

  if (this['defaultServiceTypeHealthPolicy']) {
    payload['DefaultServiceTypeHealthPolicy'] = this['defaultServiceTypeHealthPolicy'].serialize();
  }

  return payload;
};

/**
 * Deserialize the instance to ApplicationHealthPolicy schema
 *
 * @param {JSON} instance
 *
 */
ApplicationHealthPolicy.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['ConsiderWarningAsError'] !== undefined) {
      this['considerWarningAsError'] = instance['ConsiderWarningAsError'];
    }

    if (instance['MaxPercentUnhealthyDeployedApplications'] !== undefined) {
      this['maxPercentUnhealthyDeployedApplications'] = instance['MaxPercentUnhealthyDeployedApplications'];
    }

    if (instance['DefaultServiceTypeHealthPolicy']) {
      this['defaultServiceTypeHealthPolicy'] = new models['ApplicationHealthPolicyDefaultServiceTypeHealthPolicy']().deserialize(instance['DefaultServiceTypeHealthPolicy']);
    }
  }

  return this;
};

module.exports = ApplicationHealthPolicy;
