/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the DeployedServicePackageHealth class.
 * @constructor
 * @member {string} [applicationName]
 * 
 * @member {string} [serviceManifestName]
 * 
 * @member {string} [nodeName]
 * 
 * @member {object} [healthEvents]
 * 
 * @member {string} [healthEvents.sourceId]
 * 
 * @member {string} [healthEvents.property]
 * 
 * @member {number} [healthEvents.healthState]
 * 
 * @member {string} [healthEvents.timeToLiveInMilliSeconds]
 * 
 * @member {string} [healthEvents.description]
 * 
 * @member {string} [healthEvents.sequenceNumber]
 * 
 * @member {boolean} [healthEvents.removeWhenExpired]
 * 
 * @member {string} [healthEvents.sourceUtcTimestamp]
 * 
 * @member {string} [healthEvents.lastModifiedUtcTimestamp]
 * 
 * @member {boolean} [healthEvents.isExpired]
 * 
 * @member {string} [healthEvents.lastOkTransitionAt]
 * 
 * @member {string} [healthEvents.lastWarningTransitionAt]
 * 
 * @member {string} [healthEvents.lastErrorTransitionAt]
 * 
 * @member {number} [aggregatedHealthState]
 * 
 */
function DeployedServicePackageHealth() {
}

/**
 * Defines the metadata of DeployedServicePackageHealth
 *
 * @returns {object} metadata of DeployedServicePackageHealth
 *
 */
DeployedServicePackageHealth.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'DeployedServicePackageHealth',
    type: {
      name: 'Composite',
      className: 'DeployedServicePackageHealth',
      modelProperties: {
        applicationName: {
          required: false,
          serializedName: 'ApplicationName',
          type: {
            name: 'String'
          }
        },
        serviceManifestName: {
          required: false,
          serializedName: 'ServiceManifestName',
          type: {
            name: 'String'
          }
        },
        nodeName: {
          required: false,
          serializedName: 'NodeName',
          type: {
            name: 'String'
          }
        },
        healthEvents: {
          required: false,
          serializedName: 'HealthEvents',
          type: {
            name: 'Composite',
            className: 'HealthEvent'
          }
        },
        aggregatedHealthState: {
          required: false,
          serializedName: 'AggregatedHealthState',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = DeployedServicePackageHealth;
