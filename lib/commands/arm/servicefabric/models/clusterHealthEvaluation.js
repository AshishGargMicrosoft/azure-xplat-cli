/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ClusterHealthEvaluation class.
 * @constructor
 * @member {array} [unhealthyEvaluations]
 * 
 * @member {number} [maxPercentUnhealthyApplications]
 * 
 * @member {number} [totalCount]
 * 
 */
function ClusterHealthEvaluation(parameters) {
  ClusterHealthEvaluation['super_'].call(this, parameters);
  if (parameters !== null && parameters !== undefined) {
    if (parameters.unhealthyEvaluations) {
      var tempParametersunhealthyEvaluations = [];
      parameters.unhealthyEvaluations.forEach(function(element) {
        if (element) {
          element = new models['UnhealthyEvaluation'](element);
        }
        tempParametersunhealthyEvaluations.push(element);
      });
      this.unhealthyEvaluations = tempParametersunhealthyEvaluations;
    }
    if (parameters.maxPercentUnhealthyApplications !== undefined) {
      this.maxPercentUnhealthyApplications = parameters.maxPercentUnhealthyApplications;
    }
    if (parameters.totalCount !== undefined) {
      this.totalCount = parameters.totalCount;
    }
  }    
}

util.inherits(ClusterHealthEvaluation, models['HealthEvaluation']);

/**
 * Validate the payload against the ClusterHealthEvaluation schema
 *
 * @param {JSON} payload
 *
 */
ClusterHealthEvaluation.prototype.serialize = function () {
  var payload = ClusterHealthEvaluation['super_'].prototype.serialize.call(this);
  if (util.isArray(this['unhealthyEvaluations'])) {
    payload['UnhealthyEvaluations'] = [];
    for (var i = 0; i < this['unhealthyEvaluations'].length; i++) {
      if (this['unhealthyEvaluations'][i]) {
        payload['UnhealthyEvaluations'][i] = this['unhealthyEvaluations'][i].serialize();
      }
    }
  }

  if (this['maxPercentUnhealthyApplications'] !== null && this['maxPercentUnhealthyApplications'] !== undefined) {
    if (typeof this['maxPercentUnhealthyApplications'] !== 'number') {
      throw new Error('this[\'maxPercentUnhealthyApplications\'] must be of type number.');
    }
    payload['MaxPercentUnhealthyApplications'] = this['maxPercentUnhealthyApplications'];
  }

  if (this['totalCount'] !== null && this['totalCount'] !== undefined) {
    if (typeof this['totalCount'] !== 'number') {
      throw new Error('this[\'totalCount\'] must be of type number.');
    }
    payload['TotalCount'] = this['totalCount'];
  }

  return payload;
};

/**
 * Deserialize the instance to ClusterHealthEvaluation schema
 *
 * @param {JSON} instance
 *
 */
ClusterHealthEvaluation.prototype.deserialize = function (instance) {
  ClusterHealthEvaluation['super_'].prototype.deserialize.call(this, instance);
  if (instance) {
    if (instance['UnhealthyEvaluations']) {
      var tempInstanceUnhealthyEvaluations = [];
      instance['UnhealthyEvaluations'].forEach(function(element1) {
        if (element1) {
          element1 = new models['UnhealthyEvaluation']().deserialize(element1);
        }
        tempInstanceUnhealthyEvaluations.push(element1);
      });
      this['unhealthyEvaluations'] = tempInstanceUnhealthyEvaluations;
    }

    if (instance['MaxPercentUnhealthyApplications'] !== undefined) {
      this['maxPercentUnhealthyApplications'] = instance['MaxPercentUnhealthyApplications'];
    }

    if (instance['TotalCount'] !== undefined) {
      this['totalCount'] = instance['TotalCount'];
    }
  }

  return this;
};

module.exports = ClusterHealthEvaluation;
