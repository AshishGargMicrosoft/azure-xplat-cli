/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the PartitionHealthReplicaHealthStatesItem class.
 * @constructor
 * @member {number} [healthEvents]
 * 
 * @member {string} [partitionId]
 * 
 * @member {string} [replicaId]
 * 
 * @member {number} [aggregatedHealthState]
 * 
 */
function PartitionHealthReplicaHealthStatesItem(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.healthEvents !== undefined) {
      this.healthEvents = parameters.healthEvents;
    }
    if (parameters.partitionId !== undefined) {
      this.partitionId = parameters.partitionId;
    }
    if (parameters.replicaId !== undefined) {
      this.replicaId = parameters.replicaId;
    }
    if (parameters.aggregatedHealthState !== undefined) {
      this.aggregatedHealthState = parameters.aggregatedHealthState;
    }
  }    
}


/**
 * Validate the payload against the PartitionHealthReplicaHealthStatesItem schema
 *
 * @param {JSON} payload
 *
 */
PartitionHealthReplicaHealthStatesItem.prototype.serialize = function () {
  var payload = {};
  if (this['healthEvents'] !== null && this['healthEvents'] !== undefined) {
    if (typeof this['healthEvents'] !== 'number') {
      throw new Error('this[\'healthEvents\'] must be of type number.');
    }
    payload['HealthEvents'] = this['healthEvents'];
  }

  if (this['partitionId'] !== null && this['partitionId'] !== undefined) {
    if (typeof this['partitionId'].valueOf() !== 'string') {
      throw new Error('this[\'partitionId\'] must be of type string.');
    }
    payload['PartitionId'] = this['partitionId'];
  }

  if (this['replicaId'] !== null && this['replicaId'] !== undefined) {
    if (typeof this['replicaId'].valueOf() !== 'string') {
      throw new Error('this[\'replicaId\'] must be of type string.');
    }
    payload['ReplicaId'] = this['replicaId'];
  }

  if (this['aggregatedHealthState'] !== null && this['aggregatedHealthState'] !== undefined) {
    if (typeof this['aggregatedHealthState'] !== 'number') {
      throw new Error('this[\'aggregatedHealthState\'] must be of type number.');
    }
    payload['AggregatedHealthState'] = this['aggregatedHealthState'];
  }

  return payload;
};

/**
 * Deserialize the instance to PartitionHealthReplicaHealthStatesItem schema
 *
 * @param {JSON} instance
 *
 */
PartitionHealthReplicaHealthStatesItem.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['HealthEvents'] !== undefined) {
      this['healthEvents'] = instance['HealthEvents'];
    }

    if (instance['PartitionId'] !== undefined) {
      this['partitionId'] = instance['PartitionId'];
    }

    if (instance['ReplicaId'] !== undefined) {
      this['replicaId'] = instance['ReplicaId'];
    }

    if (instance['AggregatedHealthState'] !== undefined) {
      this['aggregatedHealthState'] = instance['AggregatedHealthState'];
    }
  }

  return this;
};

module.exports = PartitionHealthReplicaHealthStatesItem;
