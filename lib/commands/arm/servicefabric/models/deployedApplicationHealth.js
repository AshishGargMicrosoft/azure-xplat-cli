/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the DeployedApplicationHealth class.
 * @constructor
 * @member {object} [healthEvents]
 * 
 * @member {string} [healthEvents.sourceId]
 * 
 * @member {string} [healthEvents.property]
 * 
 * @member {number} [healthEvents.healthState]
 * 
 * @member {string} [healthEvents.timeToLiveInMilliSeconds]
 * 
 * @member {string} [healthEvents.description]
 * 
 * @member {string} [healthEvents.sequenceNumber]
 * 
 * @member {boolean} [healthEvents.removeWhenExpired]
 * 
 * @member {string} [healthEvents.sourceUtcTimestamp]
 * 
 * @member {string} [healthEvents.lastModifiedUtcTimestamp]
 * 
 * @member {boolean} [healthEvents.isExpired]
 * 
 * @member {string} [healthEvents.lastOkTransitionAt]
 * 
 * @member {string} [healthEvents.lastWarningTransitionAt]
 * 
 * @member {string} [healthEvents.lastErrorTransitionAt]
 * 
 * @member {number} [aggregatedHealthState]
 * 
 * @member {string} [unhealthyEvaluations]
 * 
 * @member {string} [name]
 * 
 * @member {string} [nodeName]
 * 
 * @member {object} [deployedServicePackageHealthStates]
 * 
 * @member {string} [deployedServicePackageHealthStates.applicationName]
 * 
 * @member {string} [deployedServicePackageHealthStates.serviceManifestName]
 * 
 * @member {string} [deployedServicePackageHealthStates.nodeName]
 * 
 * @member {number} [deployedServicePackageHealthStates.aggregatedHealthState]
 * 
 */
function DeployedApplicationHealth(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.healthEvents) {
      this.healthEvents = new models['HealthEvent'](parameters.healthEvents);
    }
    if (parameters.aggregatedHealthState !== undefined) {
      this.aggregatedHealthState = parameters.aggregatedHealthState;
    }
    if (parameters.unhealthyEvaluations !== undefined) {
      this.unhealthyEvaluations = parameters.unhealthyEvaluations;
    }
    if (parameters.name !== undefined) {
      this.name = parameters.name;
    }
    if (parameters.nodeName !== undefined) {
      this.nodeName = parameters.nodeName;
    }
    if (parameters.deployedServicePackageHealthStates) {
      this.deployedServicePackageHealthStates = new models['DeployedServicePackageHealthState'](parameters.deployedServicePackageHealthStates);
    }
  }    
}


/**
 * Validate the payload against the DeployedApplicationHealth schema
 *
 * @param {JSON} payload
 *
 */
DeployedApplicationHealth.prototype.serialize = function () {
  var payload = {};
  if (this['healthEvents']) {
    payload['HealthEvents'] = this['healthEvents'].serialize();
  }

  if (this['aggregatedHealthState'] !== null && this['aggregatedHealthState'] !== undefined) {
    if (typeof this['aggregatedHealthState'] !== 'number') {
      throw new Error('this[\'aggregatedHealthState\'] must be of type number.');
    }
    payload['AggregatedHealthState'] = this['aggregatedHealthState'];
  }

  if (this['unhealthyEvaluations'] !== null && this['unhealthyEvaluations'] !== undefined) {
    if (typeof this['unhealthyEvaluations'].valueOf() !== 'string') {
      throw new Error('this[\'unhealthyEvaluations\'] must be of type string.');
    }
    payload['UnhealthyEvaluations'] = this['unhealthyEvaluations'];
  }

  if (this['name'] !== null && this['name'] !== undefined) {
    if (typeof this['name'].valueOf() !== 'string') {
      throw new Error('this[\'name\'] must be of type string.');
    }
    payload['Name'] = this['name'];
  }

  if (this['nodeName'] !== null && this['nodeName'] !== undefined) {
    if (typeof this['nodeName'].valueOf() !== 'string') {
      throw new Error('this[\'nodeName\'] must be of type string.');
    }
    payload['NodeName'] = this['nodeName'];
  }

  if (this['deployedServicePackageHealthStates']) {
    payload['DeployedServicePackageHealthStates'] = this['deployedServicePackageHealthStates'].serialize();
  }

  return payload;
};

/**
 * Deserialize the instance to DeployedApplicationHealth schema
 *
 * @param {JSON} instance
 *
 */
DeployedApplicationHealth.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['HealthEvents']) {
      this['healthEvents'] = new models['HealthEvent']().deserialize(instance['HealthEvents']);
    }

    if (instance['AggregatedHealthState'] !== undefined) {
      this['aggregatedHealthState'] = instance['AggregatedHealthState'];
    }

    if (instance['UnhealthyEvaluations'] !== undefined) {
      this['unhealthyEvaluations'] = instance['UnhealthyEvaluations'];
    }

    if (instance['Name'] !== undefined) {
      this['name'] = instance['Name'];
    }

    if (instance['NodeName'] !== undefined) {
      this['nodeName'] = instance['NodeName'];
    }

    if (instance['DeployedServicePackageHealthStates']) {
      this['deployedServicePackageHealthStates'] = new models['DeployedServicePackageHealthState']().deserialize(instance['DeployedServicePackageHealthStates']);
    }
  }

  return this;
};

module.exports = DeployedApplicationHealth;
