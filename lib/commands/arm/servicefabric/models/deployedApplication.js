/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the DeployedApplication class.
 * @constructor
 * @member {string} [id]
 * 
 * @member {string} [name]
 * 
 * @member {string} [typeName]
 * 
 * @member {number} [status]
 * 
 * @member {string} [workDirectory]
 * 
 * @member {string} [logDirectory]
 * 
 * @member {string} [tempDirectory]
 * 
 */
function DeployedApplication(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.id !== undefined) {
      this.id = parameters.id;
    }
    if (parameters.name !== undefined) {
      this.name = parameters.name;
    }
    if (parameters.typeName !== undefined) {
      this.typeName = parameters.typeName;
    }
    if (parameters.status !== undefined) {
      this.status = parameters.status;
    }
    if (parameters.workDirectory !== undefined) {
      this.workDirectory = parameters.workDirectory;
    }
    if (parameters.logDirectory !== undefined) {
      this.logDirectory = parameters.logDirectory;
    }
    if (parameters.tempDirectory !== undefined) {
      this.tempDirectory = parameters.tempDirectory;
    }
  }    
}


/**
 * Validate the payload against the DeployedApplication schema
 *
 * @param {JSON} payload
 *
 */
DeployedApplication.prototype.serialize = function () {
  var payload = {};
  if (this['id'] !== null && this['id'] !== undefined) {
    if (typeof this['id'].valueOf() !== 'string') {
      throw new Error('this[\'id\'] must be of type string.');
    }
    payload['Id'] = this['id'];
  }

  if (this['name'] !== null && this['name'] !== undefined) {
    if (typeof this['name'].valueOf() !== 'string') {
      throw new Error('this[\'name\'] must be of type string.');
    }
    payload['Name'] = this['name'];
  }

  if (this['typeName'] !== null && this['typeName'] !== undefined) {
    if (typeof this['typeName'].valueOf() !== 'string') {
      throw new Error('this[\'typeName\'] must be of type string.');
    }
    payload['TypeName'] = this['typeName'];
  }

  if (this['status'] !== null && this['status'] !== undefined) {
    if (typeof this['status'] !== 'number') {
      throw new Error('this[\'status\'] must be of type number.');
    }
    payload['Status'] = this['status'];
  }

  if (this['workDirectory'] !== null && this['workDirectory'] !== undefined) {
    if (typeof this['workDirectory'].valueOf() !== 'string') {
      throw new Error('this[\'workDirectory\'] must be of type string.');
    }
    payload['WorkDirectory'] = this['workDirectory'];
  }

  if (this['logDirectory'] !== null && this['logDirectory'] !== undefined) {
    if (typeof this['logDirectory'].valueOf() !== 'string') {
      throw new Error('this[\'logDirectory\'] must be of type string.');
    }
    payload['LogDirectory'] = this['logDirectory'];
  }

  if (this['tempDirectory'] !== null && this['tempDirectory'] !== undefined) {
    if (typeof this['tempDirectory'].valueOf() !== 'string') {
      throw new Error('this[\'tempDirectory\'] must be of type string.');
    }
    payload['TempDirectory'] = this['tempDirectory'];
  }

  return payload;
};

/**
 * Deserialize the instance to DeployedApplication schema
 *
 * @param {JSON} instance
 *
 */
DeployedApplication.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['Id'] !== undefined) {
      this['id'] = instance['Id'];
    }

    if (instance['Name'] !== undefined) {
      this['name'] = instance['Name'];
    }

    if (instance['TypeName'] !== undefined) {
      this['typeName'] = instance['TypeName'];
    }

    if (instance['Status'] !== undefined) {
      this['status'] = instance['Status'];
    }

    if (instance['WorkDirectory'] !== undefined) {
      this['workDirectory'] = instance['WorkDirectory'];
    }

    if (instance['LogDirectory'] !== undefined) {
      this['logDirectory'] = instance['LogDirectory'];
    }

    if (instance['TempDirectory'] !== undefined) {
      this['tempDirectory'] = instance['TempDirectory'];
    }
  }

  return this;
};

module.exports = DeployedApplication;
