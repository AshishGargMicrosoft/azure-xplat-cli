/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the ApplicationUpgrade class.
 * @constructor
 * @member {string} [name]
 * 
 * @member {string} [typeName]
 * 
 * @member {string} [targetApplicationTypeVersion]
 * 
 * @member {string} [upgradeDomains]
 * 
 * @member {number} [upgradeState]
 * 
 * @member {string} [nextUpgradeDomain]
 * 
 * @member {number} [rollingUpgradeMode]
 * 
 * @member {string} [upgradeDurationInMilliseconds]
 * 
 * @member {string} [upgradeDomainDurationInMilliseconds]
 * 
 * @member {string} [unhealthyEvaluations]
 * 
 * @member {object} [currentUpgradeDomainProgress]
 * 
 * @member {string} [currentUpgradeDomainProgress.domainName]
 * 
 * @member {string} [currentUpgradeDomainProgress.nodeUpgradeProgressList]
 * 
 * @member {string} [startTimestampUtc]
 * 
 * @member {string} [failureTimestampUtc]
 * 
 * @member {number} [failureReason]
 * 
 * @member {object} [deployedApplicationHealthStates]
 * 
 * @member {string} [deployedApplicationHealthStates.domainName]
 * 
 * @member {string} [deployedApplicationHealthStates.nodeUpgradeProgressList]
 * 
 */
function ApplicationUpgrade(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.name !== undefined) {
      this.name = parameters.name;
    }
    if (parameters.typeName !== undefined) {
      this.typeName = parameters.typeName;
    }
    if (parameters.targetApplicationTypeVersion !== undefined) {
      this.targetApplicationTypeVersion = parameters.targetApplicationTypeVersion;
    }
    if (parameters.upgradeDomains !== undefined) {
      this.upgradeDomains = parameters.upgradeDomains;
    }
    if (parameters.upgradeState !== undefined) {
      this.upgradeState = parameters.upgradeState;
    }
    if (parameters.nextUpgradeDomain !== undefined) {
      this.nextUpgradeDomain = parameters.nextUpgradeDomain;
    }
    if (parameters.rollingUpgradeMode !== undefined) {
      this.rollingUpgradeMode = parameters.rollingUpgradeMode;
    }
    if (parameters.upgradeDurationInMilliseconds !== undefined) {
      this.upgradeDurationInMilliseconds = parameters.upgradeDurationInMilliseconds;
    }
    if (parameters.upgradeDomainDurationInMilliseconds !== undefined) {
      this.upgradeDomainDurationInMilliseconds = parameters.upgradeDomainDurationInMilliseconds;
    }
    if (parameters.unhealthyEvaluations !== undefined) {
      this.unhealthyEvaluations = parameters.unhealthyEvaluations;
    }
    if (parameters.currentUpgradeDomainProgress) {
      this.currentUpgradeDomainProgress = new models['ApplicationUpgradeCurrentUpgradeDomainProgress'](parameters.currentUpgradeDomainProgress);
    }
    if (parameters.startTimestampUtc !== undefined) {
      this.startTimestampUtc = parameters.startTimestampUtc;
    }
    if (parameters.failureTimestampUtc !== undefined) {
      this.failureTimestampUtc = parameters.failureTimestampUtc;
    }
    if (parameters.failureReason !== undefined) {
      this.failureReason = parameters.failureReason;
    }
    if (parameters.deployedApplicationHealthStates) {
      this.deployedApplicationHealthStates = new models['ApplicationUpgradeDeployedApplicationHealthStates'](parameters.deployedApplicationHealthStates);
    }
  }    
}


/**
 * Validate the payload against the ApplicationUpgrade schema
 *
 * @param {JSON} payload
 *
 */
ApplicationUpgrade.prototype.serialize = function () {
  var payload = {};
  if (this['name'] !== null && this['name'] !== undefined) {
    if (typeof this['name'].valueOf() !== 'string') {
      throw new Error('this[\'name\'] must be of type string.');
    }
    payload['Name'] = this['name'];
  }

  if (this['typeName'] !== null && this['typeName'] !== undefined) {
    if (typeof this['typeName'].valueOf() !== 'string') {
      throw new Error('this[\'typeName\'] must be of type string.');
    }
    payload['TypeName'] = this['typeName'];
  }

  if (this['targetApplicationTypeVersion'] !== null && this['targetApplicationTypeVersion'] !== undefined) {
    if (typeof this['targetApplicationTypeVersion'].valueOf() !== 'string') {
      throw new Error('this[\'targetApplicationTypeVersion\'] must be of type string.');
    }
    payload['TargetApplicationTypeVersion'] = this['targetApplicationTypeVersion'];
  }

  if (this['upgradeDomains'] !== null && this['upgradeDomains'] !== undefined) {
    if (typeof this['upgradeDomains'].valueOf() !== 'string') {
      throw new Error('this[\'upgradeDomains\'] must be of type string.');
    }
    payload['UpgradeDomains'] = this['upgradeDomains'];
  }

  if (this['upgradeState'] !== null && this['upgradeState'] !== undefined) {
    if (typeof this['upgradeState'] !== 'number') {
      throw new Error('this[\'upgradeState\'] must be of type number.');
    }
    payload['UpgradeState'] = this['upgradeState'];
  }

  if (this['nextUpgradeDomain'] !== null && this['nextUpgradeDomain'] !== undefined) {
    if (typeof this['nextUpgradeDomain'].valueOf() !== 'string') {
      throw new Error('this[\'nextUpgradeDomain\'] must be of type string.');
    }
    payload['NextUpgradeDomain'] = this['nextUpgradeDomain'];
  }

  if (this['rollingUpgradeMode'] !== null && this['rollingUpgradeMode'] !== undefined) {
    if (typeof this['rollingUpgradeMode'] !== 'number') {
      throw new Error('this[\'rollingUpgradeMode\'] must be of type number.');
    }
    payload['RollingUpgradeMode'] = this['rollingUpgradeMode'];
  }

  if (this['upgradeDurationInMilliseconds'] !== null && this['upgradeDurationInMilliseconds'] !== undefined) {
    if (typeof this['upgradeDurationInMilliseconds'].valueOf() !== 'string') {
      throw new Error('this[\'upgradeDurationInMilliseconds\'] must be of type string.');
    }
    payload['UpgradeDurationInMilliseconds'] = this['upgradeDurationInMilliseconds'];
  }

  if (this['upgradeDomainDurationInMilliseconds'] !== null && this['upgradeDomainDurationInMilliseconds'] !== undefined) {
    if (typeof this['upgradeDomainDurationInMilliseconds'].valueOf() !== 'string') {
      throw new Error('this[\'upgradeDomainDurationInMilliseconds\'] must be of type string.');
    }
    payload['UpgradeDomainDurationInMilliseconds'] = this['upgradeDomainDurationInMilliseconds'];
  }

  if (this['unhealthyEvaluations'] !== null && this['unhealthyEvaluations'] !== undefined) {
    if (typeof this['unhealthyEvaluations'].valueOf() !== 'string') {
      throw new Error('this[\'unhealthyEvaluations\'] must be of type string.');
    }
    payload['UnhealthyEvaluations'] = this['unhealthyEvaluations'];
  }

  if (this['currentUpgradeDomainProgress']) {
    payload['CurrentUpgradeDomainProgress'] = this['currentUpgradeDomainProgress'].serialize();
  }

  if (this['startTimestampUtc'] !== null && this['startTimestampUtc'] !== undefined) {
    if (typeof this['startTimestampUtc'].valueOf() !== 'string') {
      throw new Error('this[\'startTimestampUtc\'] must be of type string.');
    }
    payload['StartTimestampUtc'] = this['startTimestampUtc'];
  }

  if (this['failureTimestampUtc'] !== null && this['failureTimestampUtc'] !== undefined) {
    if (typeof this['failureTimestampUtc'].valueOf() !== 'string') {
      throw new Error('this[\'failureTimestampUtc\'] must be of type string.');
    }
    payload['FailureTimestampUtc'] = this['failureTimestampUtc'];
  }

  if (this['failureReason'] !== null && this['failureReason'] !== undefined) {
    if (typeof this['failureReason'] !== 'number') {
      throw new Error('this[\'failureReason\'] must be of type number.');
    }
    payload['FailureReason'] = this['failureReason'];
  }

  if (this['deployedApplicationHealthStates']) {
    payload['DeployedApplicationHealthStates'] = this['deployedApplicationHealthStates'].serialize();
  }

  return payload;
};

/**
 * Deserialize the instance to ApplicationUpgrade schema
 *
 * @param {JSON} instance
 *
 */
ApplicationUpgrade.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['Name'] !== undefined) {
      this['name'] = instance['Name'];
    }

    if (instance['TypeName'] !== undefined) {
      this['typeName'] = instance['TypeName'];
    }

    if (instance['TargetApplicationTypeVersion'] !== undefined) {
      this['targetApplicationTypeVersion'] = instance['TargetApplicationTypeVersion'];
    }

    if (instance['UpgradeDomains'] !== undefined) {
      this['upgradeDomains'] = instance['UpgradeDomains'];
    }

    if (instance['UpgradeState'] !== undefined) {
      this['upgradeState'] = instance['UpgradeState'];
    }

    if (instance['NextUpgradeDomain'] !== undefined) {
      this['nextUpgradeDomain'] = instance['NextUpgradeDomain'];
    }

    if (instance['RollingUpgradeMode'] !== undefined) {
      this['rollingUpgradeMode'] = instance['RollingUpgradeMode'];
    }

    if (instance['UpgradeDurationInMilliseconds'] !== undefined) {
      this['upgradeDurationInMilliseconds'] = instance['UpgradeDurationInMilliseconds'];
    }

    if (instance['UpgradeDomainDurationInMilliseconds'] !== undefined) {
      this['upgradeDomainDurationInMilliseconds'] = instance['UpgradeDomainDurationInMilliseconds'];
    }

    if (instance['UnhealthyEvaluations'] !== undefined) {
      this['unhealthyEvaluations'] = instance['UnhealthyEvaluations'];
    }

    if (instance['CurrentUpgradeDomainProgress']) {
      this['currentUpgradeDomainProgress'] = new models['ApplicationUpgradeCurrentUpgradeDomainProgress']().deserialize(instance['CurrentUpgradeDomainProgress']);
    }

    if (instance['StartTimestampUtc'] !== undefined) {
      this['startTimestampUtc'] = instance['StartTimestampUtc'];
    }

    if (instance['FailureTimestampUtc'] !== undefined) {
      this['failureTimestampUtc'] = instance['FailureTimestampUtc'];
    }

    if (instance['FailureReason'] !== undefined) {
      this['failureReason'] = instance['FailureReason'];
    }

    if (instance['DeployedApplicationHealthStates']) {
      this['deployedApplicationHealthStates'] = new models['ApplicationUpgradeDeployedApplicationHealthStates']().deserialize(instance['DeployedApplicationHealthStates']);
    }
  }

  return this;
};

module.exports = ApplicationUpgrade;
