/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the DeployedReplicaDetail class.
 * @constructor
 * @member {number} [serviceKind]
 * 
 * @member {string} [serviceName]
 * 
 * @member {string} [partitionId]
 * 
 * @member {number} [currentServiceOperation]
 * 
 * @member {string} [currentServiceOperationStartTimeUtc]
 * 
 * @member {string} [replicaId]
 * 
 * @member {number} [readStatus]
 * 
 * @member {number} [writeStatus]
 * 
 * @member {object} [replicatorStatus]
 * 
 * @member {number} [replicatorStatus.kind]
 * 
 * @member {object} [replicatorStatus.replicationQueueStatus]
 * 
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.queueUtilizationPercentage]
 * 
 * @member {string} [replicatorStatus.replicationQueueStatus.queueMemorySize]
 * 
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.firstSequenceNumber]
 * 
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.completedSequenceNumber]
 * 
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.committedSequenceNumber]
 * 
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.lastSequenceNumber]
 * 
 */
function DeployedReplicaDetail(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.serviceKind !== undefined) {
      this.serviceKind = parameters.serviceKind;
    }
    if (parameters.serviceName !== undefined) {
      this.serviceName = parameters.serviceName;
    }
    if (parameters.partitionId !== undefined) {
      this.partitionId = parameters.partitionId;
    }
    if (parameters.currentServiceOperation !== undefined) {
      this.currentServiceOperation = parameters.currentServiceOperation;
    }
    if (parameters.currentServiceOperationStartTimeUtc !== undefined) {
      this.currentServiceOperationStartTimeUtc = parameters.currentServiceOperationStartTimeUtc;
    }
    if (parameters.replicaId !== undefined) {
      this.replicaId = parameters.replicaId;
    }
    if (parameters.readStatus !== undefined) {
      this.readStatus = parameters.readStatus;
    }
    if (parameters.writeStatus !== undefined) {
      this.writeStatus = parameters.writeStatus;
    }
    if (parameters.replicatorStatus) {
      this.replicatorStatus = new models['DeployedReplicaDetailReplicatorStatus'](parameters.replicatorStatus);
    }
  }    
}


/**
 * Validate the payload against the DeployedReplicaDetail schema
 *
 * @param {JSON} payload
 *
 */
DeployedReplicaDetail.prototype.serialize = function () {
  var payload = {};
  if (this['serviceKind'] !== null && this['serviceKind'] !== undefined) {
    if (typeof this['serviceKind'] !== 'number') {
      throw new Error('this[\'serviceKind\'] must be of type number.');
    }
    payload['ServiceKind'] = this['serviceKind'];
  }

  if (this['serviceName'] !== null && this['serviceName'] !== undefined) {
    if (typeof this['serviceName'].valueOf() !== 'string') {
      throw new Error('this[\'serviceName\'] must be of type string.');
    }
    payload['ServiceName'] = this['serviceName'];
  }

  if (this['partitionId'] !== null && this['partitionId'] !== undefined) {
    if (typeof this['partitionId'].valueOf() !== 'string') {
      throw new Error('this[\'partitionId\'] must be of type string.');
    }
    payload['PartitionId'] = this['partitionId'];
  }

  if (this['currentServiceOperation'] !== null && this['currentServiceOperation'] !== undefined) {
    if (typeof this['currentServiceOperation'] !== 'number') {
      throw new Error('this[\'currentServiceOperation\'] must be of type number.');
    }
    payload['CurrentServiceOperation'] = this['currentServiceOperation'];
  }

  if (this['currentServiceOperationStartTimeUtc'] !== null && this['currentServiceOperationStartTimeUtc'] !== undefined) {
    if (typeof this['currentServiceOperationStartTimeUtc'].valueOf() !== 'string') {
      throw new Error('this[\'currentServiceOperationStartTimeUtc\'] must be of type string.');
    }
    payload['CurrentServiceOperationStartTimeUtc'] = this['currentServiceOperationStartTimeUtc'];
  }

  if (this['replicaId'] !== null && this['replicaId'] !== undefined) {
    if (typeof this['replicaId'].valueOf() !== 'string') {
      throw new Error('this[\'replicaId\'] must be of type string.');
    }
    payload['ReplicaId'] = this['replicaId'];
  }

  if (this['readStatus'] !== null && this['readStatus'] !== undefined) {
    if (typeof this['readStatus'] !== 'number') {
      throw new Error('this[\'readStatus\'] must be of type number.');
    }
    payload['ReadStatus'] = this['readStatus'];
  }

  if (this['writeStatus'] !== null && this['writeStatus'] !== undefined) {
    if (typeof this['writeStatus'] !== 'number') {
      throw new Error('this[\'writeStatus\'] must be of type number.');
    }
    payload['WriteStatus'] = this['writeStatus'];
  }

  if (this['replicatorStatus']) {
    payload['ReplicatorStatus'] = this['replicatorStatus'].serialize();
  }

  return payload;
};

/**
 * Deserialize the instance to DeployedReplicaDetail schema
 *
 * @param {JSON} instance
 *
 */
DeployedReplicaDetail.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['ServiceKind'] !== undefined) {
      this['serviceKind'] = instance['ServiceKind'];
    }

    if (instance['ServiceName'] !== undefined) {
      this['serviceName'] = instance['ServiceName'];
    }

    if (instance['PartitionId'] !== undefined) {
      this['partitionId'] = instance['PartitionId'];
    }

    if (instance['CurrentServiceOperation'] !== undefined) {
      this['currentServiceOperation'] = instance['CurrentServiceOperation'];
    }

    if (instance['CurrentServiceOperationStartTimeUtc'] !== undefined) {
      this['currentServiceOperationStartTimeUtc'] = instance['CurrentServiceOperationStartTimeUtc'];
    }

    if (instance['ReplicaId'] !== undefined) {
      this['replicaId'] = instance['ReplicaId'];
    }

    if (instance['ReadStatus'] !== undefined) {
      this['readStatus'] = instance['ReadStatus'];
    }

    if (instance['WriteStatus'] !== undefined) {
      this['writeStatus'] = instance['WriteStatus'];
    }

    if (instance['ReplicatorStatus']) {
      this['replicatorStatus'] = new models['DeployedReplicaDetailReplicatorStatus']().deserialize(instance['ReplicatorStatus']);
    }
  }

  return this;
};

module.exports = DeployedReplicaDetail;
