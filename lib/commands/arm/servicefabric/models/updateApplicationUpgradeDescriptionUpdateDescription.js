/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the UpdateApplicationUpgradeDescriptionUpdateDescription class.
 * @constructor
 * @member {number} [rollingUpgradeMode]
 * 
 * @member {boolean} [forceRestart]
 * 
 * @member {number} [failureAction]
 * 
 * @member {number} [upgradeReplicaSetCheckTimeoutInSeconds]
 * 
 * @member {string} [healthCheckWaitDurationInMilliseconds]
 * 
 * @member {string} [healthCheckStableDurationInMilliseconds]
 * 
 * @member {string} [healthCheckRetryTimeoutInMilliseconds]
 * 
 * @member {string} [upgradeTimeoutInMilliseconds]
 * 
 * @member {string} [upgradeDomainTimeoutInMilliseconds]
 * 
 */
function UpdateApplicationUpgradeDescriptionUpdateDescription(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.rollingUpgradeMode !== undefined) {
      this.rollingUpgradeMode = parameters.rollingUpgradeMode;
    }
    if (parameters.forceRestart !== undefined) {
      this.forceRestart = parameters.forceRestart;
    }
    if (parameters.failureAction !== undefined) {
      this.failureAction = parameters.failureAction;
    }
    if (parameters.upgradeReplicaSetCheckTimeoutInSeconds !== undefined) {
      this.upgradeReplicaSetCheckTimeoutInSeconds = parameters.upgradeReplicaSetCheckTimeoutInSeconds;
    }
    if (parameters.healthCheckWaitDurationInMilliseconds !== undefined) {
      this.healthCheckWaitDurationInMilliseconds = parameters.healthCheckWaitDurationInMilliseconds;
    }
    if (parameters.healthCheckStableDurationInMilliseconds !== undefined) {
      this.healthCheckStableDurationInMilliseconds = parameters.healthCheckStableDurationInMilliseconds;
    }
    if (parameters.healthCheckRetryTimeoutInMilliseconds !== undefined) {
      this.healthCheckRetryTimeoutInMilliseconds = parameters.healthCheckRetryTimeoutInMilliseconds;
    }
    if (parameters.upgradeTimeoutInMilliseconds !== undefined) {
      this.upgradeTimeoutInMilliseconds = parameters.upgradeTimeoutInMilliseconds;
    }
    if (parameters.upgradeDomainTimeoutInMilliseconds !== undefined) {
      this.upgradeDomainTimeoutInMilliseconds = parameters.upgradeDomainTimeoutInMilliseconds;
    }
  }    
}


/**
 * Validate the payload against the UpdateApplicationUpgradeDescriptionUpdateDescription schema
 *
 * @param {JSON} payload
 *
 */
UpdateApplicationUpgradeDescriptionUpdateDescription.prototype.serialize = function () {
  var payload = {};
  if (this['rollingUpgradeMode'] !== null && this['rollingUpgradeMode'] !== undefined) {
    if (typeof this['rollingUpgradeMode'] !== 'number') {
      throw new Error('this[\'rollingUpgradeMode\'] must be of type number.');
    }
    payload['RollingUpgradeMode'] = this['rollingUpgradeMode'];
  }

  if (this['forceRestart'] !== null && this['forceRestart'] !== undefined) {
    if (typeof this['forceRestart'] !== 'boolean') {
      throw new Error('this[\'forceRestart\'] must be of type boolean.');
    }
    payload['ForceRestart'] = this['forceRestart'];
  }

  if (this['failureAction'] !== null && this['failureAction'] !== undefined) {
    if (typeof this['failureAction'] !== 'number') {
      throw new Error('this[\'failureAction\'] must be of type number.');
    }
    payload['FailureAction'] = this['failureAction'];
  }

  if (this['upgradeReplicaSetCheckTimeoutInSeconds'] !== null && this['upgradeReplicaSetCheckTimeoutInSeconds'] !== undefined) {
    if (typeof this['upgradeReplicaSetCheckTimeoutInSeconds'] !== 'number') {
      throw new Error('this[\'upgradeReplicaSetCheckTimeoutInSeconds\'] must be of type number.');
    }
    payload['UpgradeReplicaSetCheckTimeoutInSeconds'] = this['upgradeReplicaSetCheckTimeoutInSeconds'];
  }

  if (this['healthCheckWaitDurationInMilliseconds'] !== null && this['healthCheckWaitDurationInMilliseconds'] !== undefined) {
    if (typeof this['healthCheckWaitDurationInMilliseconds'].valueOf() !== 'string') {
      throw new Error('this[\'healthCheckWaitDurationInMilliseconds\'] must be of type string.');
    }
    payload['HealthCheckWaitDurationInMilliseconds'] = this['healthCheckWaitDurationInMilliseconds'];
  }

  if (this['healthCheckStableDurationInMilliseconds'] !== null && this['healthCheckStableDurationInMilliseconds'] !== undefined) {
    if (typeof this['healthCheckStableDurationInMilliseconds'].valueOf() !== 'string') {
      throw new Error('this[\'healthCheckStableDurationInMilliseconds\'] must be of type string.');
    }
    payload['HealthCheckStableDurationInMilliseconds'] = this['healthCheckStableDurationInMilliseconds'];
  }

  if (this['healthCheckRetryTimeoutInMilliseconds'] !== null && this['healthCheckRetryTimeoutInMilliseconds'] !== undefined) {
    if (typeof this['healthCheckRetryTimeoutInMilliseconds'].valueOf() !== 'string') {
      throw new Error('this[\'healthCheckRetryTimeoutInMilliseconds\'] must be of type string.');
    }
    payload['HealthCheckRetryTimeoutInMilliseconds'] = this['healthCheckRetryTimeoutInMilliseconds'];
  }

  if (this['upgradeTimeoutInMilliseconds'] !== null && this['upgradeTimeoutInMilliseconds'] !== undefined) {
    if (typeof this['upgradeTimeoutInMilliseconds'].valueOf() !== 'string') {
      throw new Error('this[\'upgradeTimeoutInMilliseconds\'] must be of type string.');
    }
    payload['UpgradeTimeoutInMilliseconds'] = this['upgradeTimeoutInMilliseconds'];
  }

  if (this['upgradeDomainTimeoutInMilliseconds'] !== null && this['upgradeDomainTimeoutInMilliseconds'] !== undefined) {
    if (typeof this['upgradeDomainTimeoutInMilliseconds'].valueOf() !== 'string') {
      throw new Error('this[\'upgradeDomainTimeoutInMilliseconds\'] must be of type string.');
    }
    payload['UpgradeDomainTimeoutInMilliseconds'] = this['upgradeDomainTimeoutInMilliseconds'];
  }

  return payload;
};

/**
 * Deserialize the instance to UpdateApplicationUpgradeDescriptionUpdateDescription schema
 *
 * @param {JSON} instance
 *
 */
UpdateApplicationUpgradeDescriptionUpdateDescription.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['RollingUpgradeMode'] !== undefined) {
      this['rollingUpgradeMode'] = instance['RollingUpgradeMode'];
    }

    if (instance['ForceRestart'] !== undefined) {
      this['forceRestart'] = instance['ForceRestart'];
    }

    if (instance['FailureAction'] !== undefined) {
      this['failureAction'] = instance['FailureAction'];
    }

    if (instance['UpgradeReplicaSetCheckTimeoutInSeconds'] !== undefined) {
      this['upgradeReplicaSetCheckTimeoutInSeconds'] = instance['UpgradeReplicaSetCheckTimeoutInSeconds'];
    }

    if (instance['HealthCheckWaitDurationInMilliseconds'] !== undefined) {
      this['healthCheckWaitDurationInMilliseconds'] = instance['HealthCheckWaitDurationInMilliseconds'];
    }

    if (instance['HealthCheckStableDurationInMilliseconds'] !== undefined) {
      this['healthCheckStableDurationInMilliseconds'] = instance['HealthCheckStableDurationInMilliseconds'];
    }

    if (instance['HealthCheckRetryTimeoutInMilliseconds'] !== undefined) {
      this['healthCheckRetryTimeoutInMilliseconds'] = instance['HealthCheckRetryTimeoutInMilliseconds'];
    }

    if (instance['UpgradeTimeoutInMilliseconds'] !== undefined) {
      this['upgradeTimeoutInMilliseconds'] = instance['UpgradeTimeoutInMilliseconds'];
    }

    if (instance['UpgradeDomainTimeoutInMilliseconds'] !== undefined) {
      this['upgradeDomainTimeoutInMilliseconds'] = instance['UpgradeDomainTimeoutInMilliseconds'];
    }
  }

  return this;
};

module.exports = UpdateApplicationUpgradeDescriptionUpdateDescription;
