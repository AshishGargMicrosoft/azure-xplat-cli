/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the DeployedReplica class.
 * @constructor
 * @member {number} [serviceKind]
 * 
 * @member {string} [serviceName]
 * 
 * @member {string} [serviceTypeName]
 * 
 * @member {string} [serviceManifestVersion]
 * 
 * @member {string} [serviceManifestName]
 * 
 * @member {string} [codePackageName]
 * 
 * @member {string} [partitionId]
 * 
 * @member {string} [replicaId]
 * 
 * @member {string} [replicaRole]
 * 
 * @member {string} [replicaStatus]
 * 
 * @member {string} [address]
 * 
 */
function DeployedReplica(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.serviceKind !== undefined) {
      this.serviceKind = parameters.serviceKind;
    }
    if (parameters.serviceName !== undefined) {
      this.serviceName = parameters.serviceName;
    }
    if (parameters.serviceTypeName !== undefined) {
      this.serviceTypeName = parameters.serviceTypeName;
    }
    if (parameters.serviceManifestVersion !== undefined) {
      this.serviceManifestVersion = parameters.serviceManifestVersion;
    }
    if (parameters.serviceManifestName !== undefined) {
      this.serviceManifestName = parameters.serviceManifestName;
    }
    if (parameters.codePackageName !== undefined) {
      this.codePackageName = parameters.codePackageName;
    }
    if (parameters.partitionId !== undefined) {
      this.partitionId = parameters.partitionId;
    }
    if (parameters.replicaId !== undefined) {
      this.replicaId = parameters.replicaId;
    }
    if (parameters.replicaRole !== undefined) {
      this.replicaRole = parameters.replicaRole;
    }
    if (parameters.replicaStatus !== undefined) {
      this.replicaStatus = parameters.replicaStatus;
    }
    if (parameters.address !== undefined) {
      this.address = parameters.address;
    }
  }    
}


/**
 * Validate the payload against the DeployedReplica schema
 *
 * @param {JSON} payload
 *
 */
DeployedReplica.prototype.serialize = function () {
  var payload = {};
  if (this['serviceKind'] !== null && this['serviceKind'] !== undefined) {
    if (typeof this['serviceKind'] !== 'number') {
      throw new Error('this[\'serviceKind\'] must be of type number.');
    }
    payload['ServiceKind'] = this['serviceKind'];
  }

  if (this['serviceName'] !== null && this['serviceName'] !== undefined) {
    if (typeof this['serviceName'].valueOf() !== 'string') {
      throw new Error('this[\'serviceName\'] must be of type string.');
    }
    payload['ServiceName'] = this['serviceName'];
  }

  if (this['serviceTypeName'] !== null && this['serviceTypeName'] !== undefined) {
    if (typeof this['serviceTypeName'].valueOf() !== 'string') {
      throw new Error('this[\'serviceTypeName\'] must be of type string.');
    }
    payload['ServiceTypeName'] = this['serviceTypeName'];
  }

  if (this['serviceManifestVersion'] !== null && this['serviceManifestVersion'] !== undefined) {
    if (typeof this['serviceManifestVersion'].valueOf() !== 'string') {
      throw new Error('this[\'serviceManifestVersion\'] must be of type string.');
    }
    payload['ServiceManifestVersion'] = this['serviceManifestVersion'];
  }

  if (this['serviceManifestName'] !== null && this['serviceManifestName'] !== undefined) {
    if (typeof this['serviceManifestName'].valueOf() !== 'string') {
      throw new Error('this[\'serviceManifestName\'] must be of type string.');
    }
    payload['ServiceManifestName'] = this['serviceManifestName'];
  }

  if (this['codePackageName'] !== null && this['codePackageName'] !== undefined) {
    if (typeof this['codePackageName'].valueOf() !== 'string') {
      throw new Error('this[\'codePackageName\'] must be of type string.');
    }
    payload['CodePackageName'] = this['codePackageName'];
  }

  if (this['partitionId'] !== null && this['partitionId'] !== undefined) {
    if (typeof this['partitionId'].valueOf() !== 'string') {
      throw new Error('this[\'partitionId\'] must be of type string.');
    }
    payload['PartitionId'] = this['partitionId'];
  }

  if (this['replicaId'] !== null && this['replicaId'] !== undefined) {
    if (typeof this['replicaId'].valueOf() !== 'string') {
      throw new Error('this[\'replicaId\'] must be of type string.');
    }
    payload['ReplicaId'] = this['replicaId'];
  }

  if (this['replicaRole'] !== null && this['replicaRole'] !== undefined) {
    if (typeof this['replicaRole'].valueOf() !== 'string') {
      throw new Error('this[\'replicaRole\'] must be of type string.');
    }
    payload['ReplicaRole'] = this['replicaRole'];
  }

  if (this['replicaStatus'] !== null && this['replicaStatus'] !== undefined) {
    if (typeof this['replicaStatus'].valueOf() !== 'string') {
      throw new Error('this[\'replicaStatus\'] must be of type string.');
    }
    payload['ReplicaStatus'] = this['replicaStatus'];
  }

  if (this['address'] !== null && this['address'] !== undefined) {
    if (typeof this['address'].valueOf() !== 'string') {
      throw new Error('this[\'address\'] must be of type string.');
    }
    payload['Address'] = this['address'];
  }

  return payload;
};

/**
 * Deserialize the instance to DeployedReplica schema
 *
 * @param {JSON} instance
 *
 */
DeployedReplica.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['ServiceKind'] !== undefined) {
      this['serviceKind'] = instance['ServiceKind'];
    }

    if (instance['ServiceName'] !== undefined) {
      this['serviceName'] = instance['ServiceName'];
    }

    if (instance['ServiceTypeName'] !== undefined) {
      this['serviceTypeName'] = instance['ServiceTypeName'];
    }

    if (instance['ServiceManifestVersion'] !== undefined) {
      this['serviceManifestVersion'] = instance['ServiceManifestVersion'];
    }

    if (instance['ServiceManifestName'] !== undefined) {
      this['serviceManifestName'] = instance['ServiceManifestName'];
    }

    if (instance['CodePackageName'] !== undefined) {
      this['codePackageName'] = instance['CodePackageName'];
    }

    if (instance['PartitionId'] !== undefined) {
      this['partitionId'] = instance['PartitionId'];
    }

    if (instance['ReplicaId'] !== undefined) {
      this['replicaId'] = instance['ReplicaId'];
    }

    if (instance['ReplicaRole'] !== undefined) {
      this['replicaRole'] = instance['ReplicaRole'];
    }

    if (instance['ReplicaStatus'] !== undefined) {
      this['replicaStatus'] = instance['ReplicaStatus'];
    }

    if (instance['Address'] !== undefined) {
      this['address'] = instance['Address'];
    }
  }

  return this;
};

module.exports = DeployedReplica;
