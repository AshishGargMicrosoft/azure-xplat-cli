/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ClusterHealth class.
 * @constructor
 * @member {object} [healthEvents]
 * 
 * @member {string} [healthEvents.sourceId]
 * 
 * @member {string} [healthEvents.property]
 * 
 * @member {number} [healthEvents.healthState]
 * 
 * @member {string} [healthEvents.timeToLiveInMilliSeconds]
 * 
 * @member {string} [healthEvents.description]
 * 
 * @member {string} [healthEvents.sequenceNumber]
 * 
 * @member {boolean} [healthEvents.removeWhenExpired]
 * 
 * @member {string} [healthEvents.sourceUtcTimestamp]
 * 
 * @member {string} [healthEvents.lastModifiedUtcTimestamp]
 * 
 * @member {boolean} [healthEvents.isExpired]
 * 
 * @member {string} [healthEvents.lastOkTransitionAt]
 * 
 * @member {string} [healthEvents.lastWarningTransitionAt]
 * 
 * @member {string} [healthEvents.lastErrorTransitionAt]
 * 
 * @member {number} [aggregatedHealthState]
 * 
 * @member {array} [unhealthyEvaluations]
 * 
 * @member {array} [nodeHealthStates]
 * 
 * @member {array} [applicationHealthState]
 * 
 */
function ClusterHealth() {
}

/**
 * Defines the metadata of ClusterHealth
 *
 * @returns {object} metadata of ClusterHealth
 *
 */
ClusterHealth.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ClusterHealth',
    type: {
      name: 'Composite',
      className: 'ClusterHealth',
      modelProperties: {
        healthEvents: {
          required: false,
          serializedName: 'HealthEvents',
          type: {
            name: 'Composite',
            className: 'HealthEvent'
          }
        },
        aggregatedHealthState: {
          required: false,
          serializedName: 'AggregatedHealthState',
          type: {
            name: 'Number'
          }
        },
        unhealthyEvaluations: {
          required: false,
          serializedName: 'UnhealthyEvaluations',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'UnhealthyEvaluationElementType',
                type: {
                  name: 'Composite',
                  className: 'UnhealthyEvaluation'
                }
            }
          }
        },
        nodeHealthStates: {
          required: false,
          serializedName: 'NodeHealthStates',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'ClusterHealthNodeHealthStatesItemElementType',
                type: {
                  name: 'Composite',
                  className: 'ClusterHealthNodeHealthStatesItem'
                }
            }
          }
        },
        applicationHealthState: {
          required: false,
          serializedName: 'ApplicationHealthState',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'ClusterHealthApplicationHealthStateItemElementType',
                type: {
                  name: 'Composite',
                  className: 'ClusterHealthApplicationHealthStateItem'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = ClusterHealth;
